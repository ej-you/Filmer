// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT Licence",
            "url": "https://github.com/ej-you/Filmer/blob/master/LICENCE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Вход для существующего юзера по почте и паролю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход для юзера",
                "operationId": "auth-login",
                "parameters": [
                    {
                        "description": "authIn",
                        "name": "authIn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.authIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserWithToken"
                        }
                    },
                    "401": {
                        "description": "Неверный пароль для учетной записи юзера"
                    },
                    "404": {
                        "description": "Юзер с введенной почтой не найден"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Выход юзера (помещение JWT-token'а текущей сессии юзера в черный список)",
                "tags": [
                    "auth"
                ],
                "summary": "Выход юзера",
                "operationId": "auth-logout",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Регистрация нового юзера с почтой и паролем",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация юзера",
                "operationId": "auth-sign-up",
                "parameters": [
                    {
                        "description": "authIn",
                        "name": "authIn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.authIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entity.UserWithToken"
                        }
                    },
                    "409": {
                        "description": "Юзер с введенной почтой уже зарегистрирован"
                    }
                }
            }
        },
        "/films/full-info/{kinopoiskID}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Получение информации о фильме по его kinopoisk ID",
                "tags": [
                    "user-movie"
                ],
                "summary": "Получение информации о фильме",
                "operationId": "kinopoisk-get-film-info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "kinopoisk ID фильма",
                        "name": "kinopoiskID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserMovie"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "402": {
                        "description": "Превышен дневной лимит запросов к Kinopoisk API"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    },
                    "404": {
                        "description": "Фильм не найден"
                    },
                    "429": {
                        "description": "Слишком много запросов. Лимит 5 запросов в секунду"
                    }
                }
            }
        },
        "/films/stared": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Получение избранных фильмов юзера с пагинацией и настраиваемой сортировкой и фильтрацией",
                "tags": [
                    "user-movie"
                ],
                "summary": "Получение избранных фильмов юзера",
                "operationId": "films-get-stared",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "страница поиска (Например: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "поле для сортировки (Например: year | По умолчанию: updated_at | Допустимые значения: title, rating, year, updated_at)",
                        "name": "sortField",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "направление сортировки (Например: desc | По умолчанию: asc [для updated_at: desc] | Допустимые значения: asc, desc)",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "подстрока названия фильма (Например: гнев | Допустимая длина: до 20 символов)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "минимальный рейтинг (Например: 7.5 | Допустимые значения: 0 и больше)",
                        "name": "ratingFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "минимальный год (Например: 1991 | Допустимые значения: 1500..3000)",
                        "name": "yearFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "максимальный год (Например: 2014 | Допустимые значения: 1500..3000)",
                        "name": "yearTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "тип фильма (Например: сериал | Допустимые значения: фильм, сериал, видео, мини-сериал)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "жанры фильмов (Например: боевик)",
                        "name": "genres",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserMoviesWithCategory"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    }
                }
            }
        },
        "/films/want": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Получение фильмов юзера из списка \"хочу посмотреть\" с пагинацией и настраиваемой сортировкой и фильтрацией",
                "tags": [
                    "user-movie"
                ],
                "summary": "Получение фильмов юзера из списка \"хочу посмотреть\"",
                "operationId": "films-get-want",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "страница поиска (Например: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "поле для сортировки (Например: year | По умолчанию: updated_at | Допустимые значения: title, rating, year, updated_at)",
                        "name": "sortField",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "направление сортировки (Например: desc | По умолчанию: asc [для updated_at: desc] | Допустимые значения: asc, desc)",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "подстрока названия фильма (Например: гнев | Допустимая длина: до 20 символов)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "минимальный рейтинг (Например: 7.5 | Допустимые значения: 0 и больше)",
                        "name": "ratingFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "минимальный год (Например: 1991 | Допустимые значения: 1500..3000)",
                        "name": "yearFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "максимальный год (Например: 2014 | Допустимые значения: 1500..3000)",
                        "name": "yearTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "тип фильма (Например: сериал | Допустимые значения: фильм, сериал, видео, мини-сериал)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "жанры фильмов (Например: боевик)",
                        "name": "genres",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserMoviesWithCategory"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    }
                }
            }
        },
        "/films/watched": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Получение фильмов юзера из списка \"посмотрел\" с пагинацией и настраиваемой сортировкой и фильтрацией",
                "tags": [
                    "user-movie"
                ],
                "summary": "Получение фильмов юзера из списка \"посмотрел\"",
                "operationId": "films-get-watched",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "страница поиска (Например: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "поле для сортировки (Например: year | По умолчанию: updated_at | Допустимые значения: title, rating, year, updated_at)",
                        "name": "sortField",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "направление сортировки (Например: desc | По умолчанию: asc [для updated_at: desc] | Допустимые значения: asc, desc)",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "подстрока названия фильма (Например: гнев | Допустимая длина: до 20 символов)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "минимальный рейтинг (Например: 7.5 | Допустимые значения: 0 и больше)",
                        "name": "ratingFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "минимальный год (Например: 1991 | Допустимые значения: 1500..3000)",
                        "name": "yearFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "максимальный год (Например: 2014 | Допустимые значения: 1500..3000)",
                        "name": "yearTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "тип фильма (Например: сериал | Допустимые значения: фильм, сериал, видео, мини-сериал)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "жанры фильмов (Например: боевик)",
                        "name": "genres",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserMoviesWithCategory"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    }
                }
            }
        },
        "/films/{movieID}/clear": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Удаление фильма юзера из списков \"хочу посмотреть\" и \"посмотрел\" по ID фильма",
                "tags": [
                    "user-movie"
                ],
                "summary": "Удаление фильма юзера из списков \"хочу посмотреть\" и \"посмотрел\"",
                "operationId": "films-set-clear",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильма",
                        "name": "movieID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserMovie"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    },
                    "404": {
                        "description": "Фильм не найден"
                    }
                }
            }
        },
        "/films/{movieID}/star": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Добавление фильма юзера в избранное по ID фильма",
                "tags": [
                    "user-movie"
                ],
                "summary": "Добавление фильма юзера в избранное",
                "operationId": "films-set-star",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильма",
                        "name": "movieID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserMovie"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    },
                    "404": {
                        "description": "Фильм не найден"
                    }
                }
            }
        },
        "/films/{movieID}/unstar": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Удаление фильма юзера из избранного по ID фильма",
                "tags": [
                    "user-movie"
                ],
                "summary": "Удаление фильма юзера из избранного",
                "operationId": "films-set-unstar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильма",
                        "name": "movieID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserMovie"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    },
                    "404": {
                        "description": "Фильм не найден"
                    }
                }
            }
        },
        "/films/{movieID}/want": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Добавление фильма юзера в список \"хочу посмотреть\" по ID фильма",
                "tags": [
                    "user-movie"
                ],
                "summary": "Добавление фильма юзера в список \"хочу посмотреть\"",
                "operationId": "films-set-want",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильма",
                        "name": "movieID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserMovie"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    },
                    "404": {
                        "description": "Фильм не найден"
                    }
                }
            }
        },
        "/films/{movieID}/watched": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Добавление фильма юзера в список \"посмотрел\" по ID фильма",
                "tags": [
                    "user-movie"
                ],
                "summary": "Добавление фильма юзера в список \"посмотрел\"",
                "operationId": "films-set-watched",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильма",
                        "name": "movieID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserMovie"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    },
                    "404": {
                        "description": "Фильм не найден"
                    }
                }
            }
        },
        "/kinopoisk/films/search": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Поиск фильмов по ключевому слову с пагинацией",
                "tags": [
                    "movie"
                ],
                "summary": "Поиск фильмов",
                "operationId": "kinopoisk-search-films",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ключевое слово (Например: матрица)",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "страница поиска (Например: 1)",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.SearchedMovies"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "402": {
                        "description": "Превышен дневной лимит запросов к Kinopoisk API"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    },
                    "404": {
                        "description": "Фильмы не найдены"
                    },
                    "429": {
                        "description": "Слишком много запросов. Лимит 5 запросов в секунду"
                    }
                }
            }
        },
        "/staff/full-info/{personID}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Получение информации о личности по её ID",
                "tags": [
                    "staff"
                ],
                "summary": "Получение информации о личности",
                "operationId": "kinopoisk-get-staff-info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID личности",
                        "name": "personID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.PersonFull"
                        }
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "402": {
                        "description": "Превышен дневной лимит запросов к Kinopoisk API"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    },
                    "404": {
                        "description": "Личность не найдена"
                    },
                    "429": {
                        "description": "Слишком много запросов. Лимит 5 запросов в секунду"
                    }
                }
            }
        },
        "/user/change-password": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Установка нового пароля юзеру с подтверждением через старый пароль",
                "tags": [
                    "user"
                ],
                "summary": "Смена пароля юзера",
                "operationId": "user-change-password",
                "parameters": [
                    {
                        "description": "changePasswordIn",
                        "name": "changePasswordIn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.changePasswordIn"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Неверный пароль"
                    },
                    "401": {
                        "description": "Пустой или неправильный токен"
                    },
                    "403": {
                        "description": "Истекший или невалидный токен"
                    },
                    "404": {
                        "description": "Текущий юзер не найден"
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Genre": {
            "description": "movie genre",
            "type": "object",
            "properties": {
                "genre": {
                    "description": "movie genre",
                    "type": "string",
                    "example": "боевик"
                }
            }
        },
        "entity.Movie": {
            "description": "received data about movie",
            "type": "object",
            "properties": {
                "description": {
                    "description": "movie description",
                    "type": "string",
                    "example": "Жизнь Томаса Андерсона разделена на две части: днём он — самый обычный офисный работник, получающий нагоняи от начальства, а ночью превращается в хакера по имени Нео, и нет места в сети, куда он бы не смог проникнуть. Но однажды всё меняется. Томас узнаёт ужасающую правду о реальности."
                },
                "genres": {
                    "description": "movie genres",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Genre"
                    }
                },
                "id": {
                    "description": "movie uuid",
                    "type": "string",
                    "example": "0a54d171-7b07-41d1-bf5e-0ebe2b64b65a"
                },
                "imgURL": {
                    "description": "movie img URL",
                    "type": "string",
                    "example": "https://kinopoiskapiunofficial.tech/images/posters/kp_small/301.jpg"
                },
                "kinopoiskID": {
                    "description": "movie kinopoisk ID",
                    "type": "integer",
                    "example": 301
                },
                "movieLength": {
                    "description": "movie length",
                    "type": "string",
                    "example": "2:16"
                },
                "rating": {
                    "description": "movie rating",
                    "type": "number",
                    "example": 8.5
                },
                "staff": {
                    "description": "movie staff",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.MovieStaff"
                        }
                    ]
                },
                "title": {
                    "description": "movie title",
                    "type": "string",
                    "example": "Матрица"
                },
                "type": {
                    "description": "movie type (фильм, сериал, видео, мини-сериал)",
                    "type": "string",
                    "example": "фильм"
                },
                "updatedAt": {
                    "description": "last movie data update from Kinopoisk API date (RFC3339 format)",
                    "type": "string",
                    "example": "2025-02-28T22:00:05.225526936Z"
                },
                "webURL": {
                    "description": "link to the movie page on Kinopoisk",
                    "type": "string",
                    "example": "https://www.kinopoisk.ru/film/301/"
                },
                "year": {
                    "description": "movie release year",
                    "type": "integer",
                    "example": 1999
                }
            }
        },
        "entity.MovieStaff": {
            "description": "movie staff info",
            "type": "object",
            "properties": {
                "actors": {
                    "description": "movie actors (up to 30)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Person"
                    }
                },
                "directors": {
                    "description": "movie directors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Person"
                    }
                }
            }
        },
        "entity.Person": {
            "description": "one person info",
            "type": "object",
            "properties": {
                "id": {
                    "description": "person kinopoisk ID",
                    "type": "integer",
                    "example": 7836
                },
                "imgUrl": {
                    "description": "person img URL",
                    "type": "string",
                    "example": "https://st.kp.yandex.net/images/actor_iphone/iphone360_7836.jpg"
                },
                "name": {
                    "description": "person name",
                    "type": "string",
                    "example": "Киану Ривз"
                },
                "role": {
                    "description": "person role (if person is actor)",
                    "type": "string",
                    "example": "Neo"
                }
            }
        },
        "entity.PersonFull": {
            "description": "person full info",
            "type": "object",
            "properties": {
                "age": {
                    "description": "person age",
                    "type": "integer",
                    "example": 62
                },
                "birthday": {
                    "description": "person birthday",
                    "type": "string",
                    "example": "1963-03-27"
                },
                "death": {
                    "description": "person death date (can be not set)",
                    "type": "string",
                    "example": "1963-03-27"
                },
                "facts": {
                    "description": "facts about person",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Полное имя - Квентин Джером Тарантино.",
                        "Имеет двух сестёр и одного брата."
                    ]
                },
                "id": {
                    "description": "person kinopoisk ID",
                    "type": "integer",
                    "example": 7640
                },
                "imgURL": {
                    "description": "person img URL",
                    "type": "string",
                    "example": "https://kinopoiskapiunofficial.tech/images/actor_posters/kp/7640.jpg"
                },
                "moviesActor": {
                    "description": "person movies in those he was an actor",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.PersonFullMovie"
                    }
                },
                "moviesDirector": {
                    "description": "person movies were directed by him",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.PersonFullMovie"
                    }
                },
                "name": {
                    "description": "person name",
                    "type": "string",
                    "example": "Квентин Тарантино"
                },
                "profession": {
                    "description": "person profession",
                    "type": "string",
                    "example": "Актер, Сценарист, Режиссер"
                },
                "sex": {
                    "description": "person sex",
                    "type": "string",
                    "example": "мужской"
                }
            }
        },
        "entity.PersonFullMovie": {
            "description": "person movie for person full info",
            "type": "object",
            "properties": {
                "id": {
                    "description": "movie kinopoisk ID",
                    "type": "integer",
                    "example": 342
                },
                "role": {
                    "description": "person role (if person is actor)",
                    "type": "string",
                    "example": "Jimmie"
                },
                "title": {
                    "description": "movie title",
                    "type": "string",
                    "example": "Криминальное чтиво"
                }
            }
        },
        "entity.SearchedMovie": {
            "description": "received movie data (for search movies)",
            "type": "object",
            "properties": {
                "genres": {
                    "description": "movie genres",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.SearchedMovieGenre"
                    }
                },
                "id": {
                    "description": "movie kinopoisk ID",
                    "type": "integer",
                    "example": 301
                },
                "name": {
                    "description": "movie title",
                    "type": "string",
                    "example": "Матрица"
                },
                "poster": {
                    "description": "movie poster",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.SearchedMoviePoster"
                        }
                    ]
                },
                "rating": {
                    "description": "movie rating",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.SearchedMovieRating"
                        }
                    ]
                },
                "type": {
                    "description": "movie type",
                    "type": "string",
                    "example": "movie"
                },
                "year": {
                    "description": "movie release year",
                    "type": "integer",
                    "example": 1999
                }
            }
        },
        "entity.SearchedMovieGenre": {
            "description": "movie genre (for search movies)",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "боевик"
                }
            }
        },
        "entity.SearchedMoviePoster": {
            "description": "movie poster URL (for search movies)",
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "https://image.openmoviedb.com/kinopoisk-images/4774061/cf1970bc-3f08-4e0e-a095-2fb57c3aa7c6/orig"
                }
            }
        },
        "entity.SearchedMovieRating": {
            "description": "movie rating (for search movies)",
            "type": "object",
            "properties": {
                "kp": {
                    "type": "number",
                    "example": 8.498
                }
            }
        },
        "entity.SearchedMovies": {
            "description": "received data (for search movies)",
            "type": "object",
            "properties": {
                "docs": {
                    "description": "movie info",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.SearchedMovie"
                    }
                },
                "limit": {
                    "description": "movies amount per page",
                    "type": "integer",
                    "example": 25
                },
                "page": {
                    "description": "page number",
                    "type": "integer",
                    "example": 1
                },
                "pages": {
                    "description": "all pages amount",
                    "type": "integer",
                    "example": 12
                },
                "query": {
                    "description": "keyword",
                    "type": "string",
                    "example": "матрица"
                },
                "total": {
                    "description": "total movies found",
                    "type": "integer",
                    "example": 300
                }
            }
        },
        "entity.User": {
            "description": "user model",
            "type": "object",
            "properties": {
                "email": {
                    "description": "user email",
                    "type": "string",
                    "example": "user@gmail.com"
                }
            }
        },
        "entity.UserMovie": {
            "description": "user movie received data",
            "type": "object",
            "properties": {
                "movie": {
                    "$ref": "#/definitions/entity.Movie"
                },
                "stared": {
                    "description": "movie star",
                    "type": "boolean",
                    "example": true
                },
                "status": {
                    "description": "movie list (0 - nothing, 1 - want, 2 - watched)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "entity.UserMoviesFilter": {
            "type": "object",
            "properties": {
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ratingFrom": {
                    "type": "number",
                    "minimum": 0
                },
                "title": {
                    "type": "string",
                    "maxLength": 20
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "фильм",
                        "сериал",
                        "видео",
                        "мини-сериал"
                    ]
                },
                "yearFrom": {
                    "type": "integer",
                    "maximum": 3000,
                    "minimum": 1500
                },
                "yearTo": {
                    "type": "integer",
                    "maximum": 3000,
                    "minimum": 1500
                }
            }
        },
        "entity.UserMoviesPagination": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "pages": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "entity.UserMoviesSort": {
            "type": "object",
            "properties": {
                "sortField": {
                    "type": "string",
                    "enum": [
                        "title",
                        "rating",
                        "year",
                        "updated_at"
                    ]
                },
                "sortOrder": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                }
            }
        },
        "entity.UserMoviesWithCategory": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "filter fields",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.UserMoviesFilter"
                        }
                    ]
                },
                "movies": {
                    "description": "found movies list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.UserMovie"
                    }
                },
                "pagination": {
                    "description": "pagination",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.UserMoviesPagination"
                        }
                    ]
                },
                "sort": {
                    "description": "sort by field",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.UserMoviesSort"
                        }
                    ]
                }
            }
        },
        "entity.UserWithToken": {
            "description": "received data about user with token",
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "access token, generated after success auth",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDA3NjA0MzIsInVzZXJJRCI6IjU4MzU0ZGJhLWUyY2MtNDI4My04MjAxLWNjZGRiZTkzOGExNSJ9.VwA9d9lao0Xgl5c3H9VNM8JVtUKDs47YEItb6MZlkCw"
                },
                "user": {
                    "description": "user data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.User"
                        }
                    ]
                }
            }
        },
        "http.authIn": {
            "description": "data for sign up OR login user",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "user email",
                    "type": "string",
                    "maxLength": 100,
                    "example": "user@gmail.com"
                },
                "password": {
                    "description": "user password",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8,
                    "example": "qwerty123"
                }
            }
        },
        "http.changePasswordIn": {
            "description": "data for change user password",
            "type": "object",
            "required": [
                "currentPassword",
                "newPassword"
            ],
            "properties": {
                "currentPassword": {
                    "description": "current password",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8,
                    "example": "qwerty123"
                },
                "newPassword": {
                    "description": "new password",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8,
                    "example": "123qwerty"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "JWT security accessToken. Please, add it in the format \"Bearer {AccessToken}\" to authorize your requests.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "127.0.0.1:3000",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Filmer API",
	Description:      "This is a Filmer API for Kinopoisk API and DB",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
